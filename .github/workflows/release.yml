name: Release

on:
  release:
    types: [created]

jobs:
  releases-matrix:
    name: Release Go Binary for ${{ matrix.goos }}/${{ matrix.goarch }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - goos: linux
            goarch: amd64
          - goos: linux
            goarch: arm64
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install GStreamer dependencies for ${{ matrix.goarch }}
        run: |
          sudo apt-get update
          if [ "${{ matrix.goarch }}" = "arm64" ]; then
            sudo dpkg --add-architecture arm64
            sudo apt-get install -y gcc-aarch64-linux-gnu libglib2.0-dev:arm64 libgstreamer1.0-dev:arm64 libgstreamer-plugins-base1.0-dev:arm64 libgstreamer-plugins-bad1.0-dev:arm64 pkg-config:arm64
          else
            sudo apt-get install -y libglib2.0-dev libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev libgstreamer-plugins-bad1.0-dev pkg-config
          fi

      - name: Build and Release
        uses: wangyoucao577/go-release-action@v1.51
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          goos: ${{ matrix.goos }}
          goarch: ${{ matrix.goarch }}
          # Enable CGO for GStreamer bindings
          cgo_enabled: "1"
          # Set the C compiler for arm64 cross-compilation
          env: ${{ matrix.goarch == 'arm64' && 'CC=aarch64-linux-gnu-gcc' || '' }}
          extra_files: LICENSE README.md