name: CI Pipeline

on:
  push:
    branches: [ "main" ]
    paths:
      - '**.go'
      - 'Dockerfile'
      - '.github/workflows/**'
  pull_request:
    branches: [ "main" ]
    paths:
      - '**.go'
      - 'Dockerfile'
      - '.github/workflows/**'

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
          cache: true

      - name: Install GLib and GStreamer dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libglib2.0-dev libgstreamer1.0-dev \
          libgstreamer-plugins-base1.0-dev pkg-config

      - run: go mod tidy
      - run: go mod download

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v8
        with:
          version: v2.1.6

  test:
    runs-on: ubuntu-latest
    needs: lint
    # Only run this job on push to main, not on PRs
    if: github.event_name == 'push'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
          cache: true
      - run: go version

      - name: Install GStreamer dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y gstreamer1.0-tools gstreamer1.0-plugins-base \
          gstreamer1.0-plugins-good gstreamer1.0-plugins-bad \
          libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev pkg-config

      - run: go mod tidy
      - run: go mod download

      - name: Run tests
        run: go test -race -count 1 -p 8 -parallel 8 -timeout 1m -coverpkg ./... -coverprofile coverage.out ./...

      - name: Upload coverage
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

#  docker-can-build:
#    runs-on: ubuntu-latest
#    needs: lint
#    # Only run this job on push to main, not on PRs
#    if: github.event_name == 'push'
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v4
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v3
#      - name: Build Docker image
#        uses: docker/build-push-action@v6
#        with:
#          context: .
#          push: false
#          tags: slowcast:latest
#          cache-from: type=gha
#          cache-to: type=gha,mode=max